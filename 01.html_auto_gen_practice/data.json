{
    "body": [
        {
            "type": "header",
            "date": "2025년 7월 25일 21:00 - 22:00",
            "title": {
                "main": "✍️ 꾸준히 씁시다 클럽",
                "sub": "OT & 미니 워크숍"
            }
        },
        {
            "type": "programSection",
            "header": [
                "세션",
                "다룰 내용",
                "소요 시간"
            ],
            "body": [
                [
                    "1. 클럽 소개",
                    "클럽 운영 방식과 철학에 대하여",
                    "21:00 - 21:10 (10분)"
                ],
                [
                    "2. 미니 워크숍",
                    "MECE 원칙과 글을 쓸 때 우리가 자주 저지르는 실수에 대하여",
                    "21:10 - 21:25 (15분)"
                ],
                [
                    "3. 선언문 발표",
                    "선언문을 발표함으로써 스스로는 책임을 갖고 타인으로부터 자극 받기",
                    "21:25 - 22:00 (35분)"
                ]
            ]
        },
        {
            "type": "sectionTitle",
            "name": "1. 클럽 소개"
        },
        {
            "type": "grid",
            "header": [
                {
                    "title": "운영 기간",
                    "desc": "2024년 7월 21일(월) ~ 12월 31일(수), 총 24주"
                },
                {
                    "title": "글쓰기 주기",
                    "desc": "각자 설정 (예: 주 1회, 격주 1회 등)"
                },
                {
                    "title": "진행 채널",
                    "desc": "하코 디스코드 소모임 채널"
                },
                {
                    "title": "활동 방식",
                    "desc": "개별 발행 + 서로의 글 공유 + 가벼운 피드백"
                },
                {
                    "title": "공식 회고",
                    "desc": "총 2회 (8주 단위 중간 회고) + 1회 연말 결산"
                }
            ],
            "sectionHeader": "운영방식",
            "content": [
                [
                    {
                        "title": "클럽장은",
                        "items": [
                            "주간 리마인드 메세지 발송",
                            "트래킹 시트 기록"
                        ]
                    },
                    {
                        "title": "클럽 멤버는",
                        "items": [
                            "글을 발행하면 링크와 간단한 코멘트 업로드",
                            "자유롭게 서로 읽고, 마음이 닿으면 가벼운 피드백도 OK"
                        ]
                    }
                ],
                [
                    {
                        "title": "8주마다 중간 회고 (총 2회)",
                        "items": [
                            "미니 워크숍 or 비동기 질문지 기반 회고",
                            "글쓰기 루틴 돌아보고 개선 포인트 점검"
                        ]
                    },
                    {
                        "title": "12월 말 연말 결산",
                        "items": [
                            "나의 BEST 콘텐츠 선정",
                            "다 함께 회고하고 축하하는 자리"
                        ]
                    }
                ]
            ],
            "footer": [
                "주간 루틴",
                "회고와 결산"
            ]
        },
        {
            "type": "infoBlock",
            "title": "왜 '함께' 쓰려고 하냐면요",
            "contentBox": [
                "혼자서는 미뤄지기 쉬운 글쓰기를, 함께 쓰는 환경에서 습관화하려고 합니다.",
                "글을 잘 쓰는 법보다, 계속 쓰는 사람이 되는 것을 목표로",
                "목적과 목표를 스스로 선언하고, 이를 향해 나아가는 과정을 함께 지켜봐주는 동료들과",
                "글을 쓰는 습관을 통해 내가 어떤 변화를 만들고 싶은지를 잊지 않기 위해"
            ]
        },
        {
            "type": "infoBlock",
            "title": "우리의 목표는요",
            "contentBox": [
                "발행 주기를 설정하고 실천함으로써 글쓰기 습관을 내재화한다.",
                "길이나 퀄리티보다 '작성-정리-발행'의 반복 경험에 집중한다.",
                "메모 수준의 아이디어를 글로 정리하며 나만의 언어를 만들어간다.",
                "글 한편이 불러 올 나비효과를 믿고, 디지털 상의 존재감을 확장한다.",
                "리마인드와 체크인, 글 공유와 피드백을 통해 함께 쓰는 구조에서 동기를 유지한다."
            ]
        },
        {
            "type": "infoBlock",
            "title": "이런 변화를 기대합니다",
            "contentBox": [
                "매주 글을 쓰지는 못했더라도, 글쓰기를 멈추지 않았다면",
                "나의 생각을 예전보다 더 선명하게 표현할 수 있게 되었다면",
                "\"이건 글감인데?\" 하고 넘겼던 순간들을 하나라도 글로 옮겼다면",
                "글을 통해 나를 설명할 수 있는 언어가 조금 더 쌓였다면",
                "누군가의 글을 읽고 자극을 받았고, 내 글이 누군가에게 자극이 되었다면"
            ]
        },
        {
            "type": "sectionTitle",
            "name": "2. 미니 워크숍",
            "subTitle": "개발자들이여 보라!"
        },
        {
            "type": "workshopBlock",
            "blockTitle": "MECE 소개",
            "conceptTitle": "가로 노드는 겹치지 않게, 부모 노드는 자식 노드의 요약",
            "image": {
                "url": "./example.png",
                "alt": "MECE 원칙 예시"
            }
        },
        {
            "type": "workshopBlock",
            "blockTitle": "TIL' 쓸 때는 말이야",
            "conceptTitle": "내가 한 것(Doing)과 이해한 것(Knowing)을 분리하자",
            "example": [
                {
                    "title": "나쁜 예시",
                    "code": "## 오늘 배운 것\n- 백엔드랑 프론트엔드가 왜 나뉘었는지 배웠다.\n- Next.js 기초 실습했다.\n- Docker랑 MySQL 환경 구축해봤다.\n- Spring + Kotlin 프로젝트 만들고 구조 파악했다.\n\n## 깨달은 점\n- App Router 구조가 재밌었다.\n- Docker는 설정이 더 중요.\n- CSS 모듈 쓰면 클래스 충돌 안 나서 좋다."
                },
                {
                    "title": "좋은 예시",
                    "code": "## 1. 오늘 한 것 (What I Did)\n- Next.js 프로젝트 생성 및 App Router 구조 실습\n- style.module.css로 모듈형 스타일링 실습\n- Docker + MySQL 로컬 환경 구성\n- Spring + Kotlin 기반 웹 프로젝트 생성 및 구조 파악\n\n## 2. 새로 이해한 것 (What I Learned)\n\n### 웹서비스 구조의 진화\n- 프론트/백 분리는 역할 분담 + 복잡도 분산을 위한 구조적 진화\n- '백'은 데이터·비즈니스 로직 / '프론트'는 사용자 인터페이스\n- 인프라(Docker)는 실행 환경을 추상화해 일관성 유지\n\n### Next.js 구조 이해\n- app/ 폴더 구조가 URL과 1:1 대응 (폴더 = 라우트)\n- layout.tsx에 공통 UI 배치 → 모든 페이지에 자동 적용\n- usePathname()으로 현재 URL 따라 네비게이션 렌더링 가능\n\n→ **페이지 구조 먼저 생각하도록 유도**하는 설계\n## 3. 남은 의문 / 다음 학습\n- Spring ORM에서 Entity와 DB 테이블의 매핑 관계가 어떻게 동작하는지 더 깊이 이해 필요\n- Next.js에서 dynamic route나 middleware는 어떻게 작동하는지 학습 예정"
                }
            ]
        },
        {
            "type": "workshopBlock",
            "blockTitle": "'작업기' 쓸 때는 말이야",
            "conceptTitle": "프로젝트 작업기는 실시간 중계가 아니다",
            "example": [
                {
                    "title": "나쁜 예시",
                    "code": "# 오픈소스 기여 중 겪었던 마이그레이션 이야기\n\n1. Quill.js 2.0.3을 도입하려 했으나 Yorkie는 1.3.7만 지원.\n2. Quill.js 처음 써봐서 막막했지만 일단 간단한 에디터 만들어봄.\n3. 욕심 부리지 않고 1.3.7 기준 예제를 Next.js로 마이그레이션.\n4. Delta 변경이 큰 장벽이었고 문서도 미흡함.\n5. Quill.js v2 변경사항은 Op 타입으로 대체된 것이 핵심.\n6. 최종적으로 Yorkie 리포에 PR 머지됨!"
                },
                {
                    "title": "좋은 예시",
                    "code": "# [마이그레이션 작업기] Yorkie x Quill.js 예제를 Next.js 환경으로 옮기며 배운 것들\n\n## 1. 목적\n- Yorkie의 텍스트 협업 기능을 **Next.js + Quill.js 환경**에서 활용 가능하게 하기\n- Quill 2.0.3 버전 기반의 공식 예제가 없어, **직접 마이그레이션하고 OSS에 기여**하는 것을 목표로 함\n\n## 2. 마이그레이션 과정에서 맞닥뜨린 문제\n\n### 문제 1. 공식 예제는 Quill.js 1.3.7 기반\n- 내가 원하는 기능(복수 에디터 지원)은 2.0.3에 포함\n- 하지만 Yorkie는 1.3.7에만 최적화되어 있어 문서/예제가 없음\n\n### 문제 2. Quill.js의 Delta 타입과 Yorkie 연동 방식 불일치\n- Quill 2.x에서 Delta 구조 변경 (DeltaOperation → Op)\n- insert/retain 처리 방식이 달라짐\n- 문서에는 해당 차이가 명확히 설명되어 있지 않음\n\n## 3. 해결 전략\n\n### 전략 1. 욕심 버리고 단계별 마이그레이션\n- 처음부터 React+Yorkie+Quill 2.0.3은 과욕\n- → **기존 vanilla 예제를 React 환경으로 이식**\n- 이후 Yorkie의 React SDK로 리팩토링\n\n## 4. 배운것\n- Quill.js 2.x 주요 개선: 타입스크립트 완전 지원, 중첩/복수 에디터 지원, ESM 대응\n- 마이그레이션 전략: 버전 변경과 프레임워크 변경을 동시에 하지 않는다\n- OSS 기여 포인트: \"내가 필요한 것\"에서 출발 → \"공식 예제 개선\"까지 기여 확대 가능\n\n## 5. 회고\n- 다른 사람이 막막해할 만한 지점은 나도 막막했다. 그래서 해결한 과정을 문서화하고 기여로 연결할 수 있었다."
                }
            ]
        },
        {
            "type": "sectionTitle",
            "name": "3. 선언문 발표",
            "subTitle": "용기 있게 나오세요!"
        },
        {
            "type": "conceptImage",
            "image": {
                "url": "./brave.jpg",
                "alt": "brave 원칙 예시"
                }
        }
    ]
}